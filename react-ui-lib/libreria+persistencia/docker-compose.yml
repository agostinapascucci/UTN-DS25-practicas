version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: app_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: z2Sk*2fgc2p+RFA
      POSTGRES_DB: appdb
    ports:
      - "6543:6543"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Opcional: si querés correr migraciones/seed al crear el contenedor,
      # poné scripts .sql en esta carpeta
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app_backend
    env_file:
      - ./backend/.env
    environment:
      # Si no querés usar env_file, podés definirlo acá:
      # DATABASE_URL: postgres://postgres:postgres@db:5432/appdb
      DATABASE_URL: postgresql://postgres.nyssoyhaaqmeszcnbpgo:z2Sk*2fgc2p+RFA@aws-1-sa-east-1.pooler.supabase.com:6543/postgres
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: app_frontend
    env_file:
      - ./frontend/.env
    environment:
      # Si tu frontend necesita saber dónde está el backend:
      # VITE_API_URL: http://localhost:3000
      VITE_API_URL: http://localhost:3000
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npx vite --host 0.0.0.0 --port 5173 --strictPort"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local